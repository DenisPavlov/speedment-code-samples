package com.company.speedment.orm.test.hare.db0.hares.carrot.impl;

import com.company.speedment.orm.test.hare.db0.hares.carrot.Carrot;
import com.company.speedment.orm.test.hare.db0.hares.carrot.CarrotBuilder;
import java.util.Objects;
import java.util.Optional;
import java.util.StringJoiner;
import javax.annotation.Generated;

/**
 * An implementation  representing an entity (for example, a row) in the Table 'hare.db0.hares.carrot'.
 * <p>
 * This Class or Interface has been automatically generated by Speedment.
 * Any changes made to this Class or Interface will be overwritten.
 * 
 * @author Speedment 
 */
@Generated("Speedment")
public class CarrotImpl implements CarrotBuilder {
    
    private Integer id;
    private String name;
    private Integer owner;
    private Integer rival;
    
    public CarrotImpl() {
        
    }
    
    public CarrotImpl(final Carrot carrot) {
        setId(carrot.getId());
        carrot.getName().ifPresent(this::setName);
        setOwner(carrot.getOwner());
        carrot.getRival().ifPresent(this::setRival);
    }
    
    @Override
    public Integer getId() {
        return id;
    }
    
    @Override
    public final CarrotImpl setId(Integer id) {
        this.id = id;
        return this;
    }
    
    @Override
    public Optional<String> getName() {
        return Optional.ofNullable(name);
    }
    
    @Override
    public final CarrotImpl setName(String name) {
        this.name = name;
        return this;
    }
    
    @Override
    public Integer getOwner() {
        return owner;
    }
    
    @Override
    public final CarrotImpl setOwner(Integer owner) {
        this.owner = owner;
        return this;
    }
    
    @Override
    public Optional<Integer> getRival() {
        return Optional.ofNullable(rival);
    }
    
    @Override
    public final CarrotImpl setRival(Integer rival) {
        this.rival = rival;
        return this;
    }
    
    @Override
    public Carrot build() {
        return new CarrotImpl(this);
    }
    
    @Override
    public String toString() {
        final StringJoiner sj = new StringJoiner(", ", "{ ", " }");
        sj.add("id = "+Objects.toString(getId()));
        sj.add("name = "+Objects.toString(getName().orElse(null)));
        sj.add("owner = "+Objects.toString(getOwner()));
        sj.add("rival = "+Objects.toString(getRival().orElse(null)));
        return "CarrotImpl "+sj.toString();
    }
}