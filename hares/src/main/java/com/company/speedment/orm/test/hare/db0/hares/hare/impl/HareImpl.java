package com.company.speedment.orm.test.hare.db0.hares.hare.impl;

import com.company.speedment.orm.test.hare.db0.hares.hare.Hare;
import com.company.speedment.orm.test.hare.db0.hares.hare.HareBuilder;
import java.util.Objects;
import java.util.Optional;
import java.util.StringJoiner;
import javax.annotation.Generated;

/**
 * An implementation  representing an entity (for example, a row) in the Table 'hare.db0.hares.hare'.
 * <p>
 * This Class or Interface has been automatically generated by Speedment.
 * Any changes made to this Class or Interface will be overwritten.
 * 
 * @author Speedment 
 */
@Generated("Speedment")
public class HareImpl implements HareBuilder {
    
    private Integer id;
    private String name;
    private String color;
    private Integer age;
    
    public HareImpl() {
        
    }
    
    public HareImpl(final Hare hare) {
        setId(hare.getId());
        hare.getName().ifPresent(this::setName);
        hare.getColor().ifPresent(this::setColor);
        hare.getAge().ifPresent(this::setAge);
    }
    
    @Override
    public Integer getId() {
        return id;
    }
    
    @Override
    public final HareImpl setId(Integer id) {
        this.id = id;
        return this;
    }
    
    @Override
    public Optional<String> getName() {
        return Optional.ofNullable(name);
    }
    
    @Override
    public final HareImpl setName(String name) {
        this.name = name;
        return this;
    }
    
    @Override
    public Optional<String> getColor() {
        return Optional.ofNullable(color);
    }
    
    @Override
    public final HareImpl setColor(String color) {
        this.color = color;
        return this;
    }
    
    @Override
    public Optional<Integer> getAge() {
        return Optional.ofNullable(age);
    }
    
    @Override
    public final HareImpl setAge(Integer age) {
        this.age = age;
        return this;
    }
    
    @Override
    public Hare build() {
        return new HareImpl(this);
    }
    
    @Override
    public String toString() {
        final StringJoiner sj = new StringJoiner(", ", "{ ", " }");
        sj.add("id = "+Objects.toString(getId()));
        sj.add("name = "+Objects.toString(getName().orElse(null)));
        sj.add("color = "+Objects.toString(getColor().orElse(null)));
        sj.add("age = "+Objects.toString(getAge().orElse(null)));
        return "HareImpl "+sj.toString();
    }
}