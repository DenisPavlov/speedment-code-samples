package com.company.speedment.orm.test.project_1.db0.hares.hare;

import com.speedment.core.core.entity.Entity;
import com.speedment.core.core.manager.metaresult.MetaResult;
import java.lang.Integer;
import java.util.Optional;
import java.util.function.Consumer;
import java.util.stream.Stream;
import javax.annotation.Generated;

/**
 * An interface representing an entity (for example, a row) in the Table 'project_1.db0.hares.hare'.
 * <p>
 * This Class or Interface has been automatically generated by Speedment.
 * Any changes made to this Class or Interface will be overwritten.
 * 
 * @author Speedment 
 */
@Generated("Speedment")
@Entity(managerType = HareManager.class,
        builderType = HareBuilder.class,
        primaryKeyType = Integer.class)
public interface Hare {
    
    Integer getId();
    
    String getName();
    
    String getColor();
    
    Integer getAge();
    
    static HareBuilder builder() {
        return HareManager.get().builder();
    }
    
    default HareBuilder toBuilder() {
        return HareManager.get().toBuilder(this);
    }
    
    default String toJson() {
        return HareManager.get().toJson(this);
    }
    
    static Stream<Hare> stream() {
        return HareManager.get().stream();
    }
    
    default Optional<Hare> persist() {
        return HareManager.get().persist(this);
    }
    
    default Optional<Hare> update() {
        return HareManager.get().update(this);
    }
    
    default Optional<Hare> remove() {
        return HareManager.get().remove(this);
    }
    
    default Optional<Hare> persist(Consumer<MetaResult<Hare>> listener) {
        return HareManager.get().persist(this, listener);
    }
    
    default Optional<Hare> update(Consumer<MetaResult<Hare>> listener) {
        return HareManager.get().update(this, listener);
    }
    
    default Optional<Hare> remove(Consumer<MetaResult<Hare>> listener) {
        return HareManager.get().remove(this, listener);
    }
}