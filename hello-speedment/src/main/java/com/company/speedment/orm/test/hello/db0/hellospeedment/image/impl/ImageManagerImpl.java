package com.company.speedment.orm.test.hello.db0.hellospeedment.image.impl;

import com.company.speedment.orm.test.hello.db0.hellospeedment.image.Image;
import com.company.speedment.orm.test.hello.db0.hellospeedment.image.ImageBuilder;
import com.company.speedment.orm.test.hello.db0.hellospeedment.image.ImageManager;
import com.speedment.core.core.manager.sql.AbstractSqlManager;
import com.speedment.core.exception.SpeedmentException;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.stream.Stream;
import javax.annotation.Generated;

/**
 * A manager implementation representing an entity (for example, a row) in the Table 'hello.db0.hellospeedment.image'.
 * <p>
 * This Class or Interface has been automatically generated by Speedment.
 * Any changes made to this Class or Interface will be overwritten.
 * 
 * @author Speedment 
 */
@Generated("Speedment")
public class ImageManagerImpl extends AbstractSqlManager<Integer, Image, ImageBuilder> implements ImageManager {
    
    public ImageManagerImpl() {
        setSqlEntityMapper(this::defaultReadEntity);
    }
    
    @Override
    public ImageBuilder builder() {
        return new ImageImpl();
    }
    
    @Override
    public ImageBuilder toBuilder(Image prototype) {
        return new ImageImpl(prototype);
    }
    
    protected Image defaultReadEntity(ResultSet resultSet) {
        final ImageBuilder builder = builder();
        try {
            builder.setId(resultSet.getInt("id"));
            builder.setTitle(getString(resultSet, "title"));
            builder.setDescription(getString(resultSet, "description"));
            builder.setAuthor(getInt(resultSet, "author"));
            builder.setPublished(getTimestamp(resultSet, "published"));
            builder.setSrc(getString(resultSet, "src"));
        }
        catch (SQLException sqle) {
            throw new SpeedmentException(sqle);
        }
        return builder;
    }
}