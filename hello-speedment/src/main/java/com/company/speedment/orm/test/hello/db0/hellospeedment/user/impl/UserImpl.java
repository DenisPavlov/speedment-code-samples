package com.company.speedment.orm.test.hello.db0.hellospeedment.user.impl;

import com.company.speedment.orm.test.hello.db0.hellospeedment.user.User;
import com.company.speedment.orm.test.hello.db0.hellospeedment.user.UserBuilder;
import java.util.Objects;
import java.util.Optional;
import java.util.StringJoiner;
import javax.annotation.Generated;

/**
 * An implementation  representing an entity (for example, a row) in the Table 'hello.db0.hellospeedment.user'.
 * <p>
 * This Class or Interface has been automatically generated by Speedment.
 * Any changes made to this Class or Interface will be overwritten.
 * 
 * @author Speedment 
 */
@Generated("Speedment")
public class UserImpl implements UserBuilder {
    
    private Integer id;
    private String mail;
    
    public UserImpl() {
        
    }
    
    public UserImpl(final User user) {
        setId(user.getId());
        user.getMail().ifPresent(this::setMail);
    }
    
    @Override
    public Integer getId() {
        return id;
    }
    
    @Override
    public final UserImpl setId(Integer id) {
        this.id = id;
        return this;
    }
    
    @Override
    public Optional<String> getMail() {
        return Optional.ofNullable(mail);
    }
    
    @Override
    public final UserImpl setMail(String mail) {
        this.mail = mail;
        return this;
    }
    
    @Override
    public User build() {
        return new UserImpl(this);
    }
    
    @Override
    public String toString() {
        final StringJoiner sj = new StringJoiner(", ", "{ ", " }");
        sj.add("id = "+Objects.toString(getId()));
        sj.add("mail = "+Objects.toString(getMail().orElse(null)));
        return "UserImpl "+sj.toString();
    }
}