package com.company.speedment.orm.test.hello.db0.hellospeedment.visit.impl;

import com.company.speedment.orm.test.hello.db0.hellospeedment.visit.Visit;
import com.company.speedment.orm.test.hello.db0.hellospeedment.visit.VisitBuilder;
import java.sql.Timestamp;
import java.util.Objects;
import java.util.Optional;
import java.util.StringJoiner;
import javax.annotation.Generated;

/**
 * An implementation  representing an entity (for example, a row) in the Table 'hello.db0.hellospeedment.visit'.
 * <p>
 * This Class or Interface has been automatically generated by Speedment.
 * Any changes made to this Class or Interface will be overwritten.
 * 
 * @author Speedment 
 */
@Generated("Speedment")
public class VisitImpl implements VisitBuilder {
    
    private Integer id;
    private Timestamp time;
    private Integer user;
    private String image;
    
    public VisitImpl() {
        
    }
    
    public VisitImpl(final Visit visit) {
        setId(visit.getId());
        visit.getTime().ifPresent(this::setTime);
        visit.getUser().ifPresent(this::setUser);
        visit.getImage().ifPresent(this::setImage);
    }
    
    @Override
    public Integer getId() {
        return id;
    }
    
    @Override
    public final VisitImpl setId(Integer id) {
        this.id = id;
        return this;
    }
    
    @Override
    public Optional<Timestamp> getTime() {
        return Optional.ofNullable(time);
    }
    
    @Override
    public final VisitImpl setTime(Timestamp time) {
        this.time = time;
        return this;
    }
    
    @Override
    public Optional<Integer> getUser() {
        return Optional.ofNullable(user);
    }
    
    @Override
    public final VisitImpl setUser(Integer user) {
        this.user = user;
        return this;
    }
    
    @Override
    public Optional<String> getImage() {
        return Optional.ofNullable(image);
    }
    
    @Override
    public final VisitImpl setImage(String image) {
        this.image = image;
        return this;
    }
    
    @Override
    public Visit build() {
        return new VisitImpl(this);
    }
    
    @Override
    public String toString() {
        final StringJoiner sj = new StringJoiner(", ", "{ ", " }");
        sj.add("id = "+Objects.toString(getId()));
        sj.add("time = "+Objects.toString(getTime().orElse(null)));
        sj.add("user = "+Objects.toString(getUser().orElse(null)));
        sj.add("image = "+Objects.toString(getImage().orElse(null)));
        return "VisitImpl "+sj.toString();
    }
}