package com.company.speedment.orm.test.hello.db0.hellospeedment.visit.impl;

import com.company.speedment.orm.test.hello.db0.hellospeedment.visit.Visit;
import com.company.speedment.orm.test.hello.db0.hellospeedment.visit.VisitBuilder;
import com.company.speedment.orm.test.hello.db0.hellospeedment.visit.VisitManager;
import com.speedment.orm.core.manager.sql.AbstractSqlManager;
import java.lang.RuntimeException;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.stream.Stream;
import javax.annotation.Generated;

/**
 * A manager implementation representing an entity (for example, a row) in the Table 'hello.db0.hellospeedment.visit'.
 * <p>
 * This Class or Interface has been automatically generated by Speedment.
 * Any changes made to this Class or Interface will be overwritten.
 * 
 * @author Speedment 
 */
@Generated("Speedment")
public class VisitManagerImpl extends AbstractSqlManager<Integer, Visit, VisitBuilder> implements VisitManager {
    
    public VisitManagerImpl() {
        setSqlEntityMapper(this::defaultReadEntity);
    }
    
    @Override
    public VisitBuilder builder() {
        return new VisitImpl();
    }
    
    @Override
    public VisitBuilder toBuilder(Visit prototype) {
        return new VisitImpl(prototype);
    }
    
    protected Visit defaultReadEntity(ResultSet resultSet) {
        final VisitBuilder builder = builder();
        try {
            builder.setId(resultSet.getInt("id"));
            builder.setTime(resultSet.getTimestamp("time"));
            builder.setUser(resultSet.getInt("user"));
            builder.setImage(resultSet.getString("image"));
        }
        catch (SQLException sqle) {
            throw new RuntimeException(sqle);
        }
        return builder;
    }
}