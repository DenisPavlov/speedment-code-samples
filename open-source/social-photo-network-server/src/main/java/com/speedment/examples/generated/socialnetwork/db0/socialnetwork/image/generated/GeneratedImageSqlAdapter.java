package com.speedment.examples.generated.socialnetwork.db0.socialnetwork.image.generated;

import com.speedment.common.injector.annotation.ExecuteBefore;
import com.speedment.examples.generated.socialnetwork.db0.socialnetwork.image.Image;
import com.speedment.examples.generated.socialnetwork.db0.socialnetwork.image.ImageImpl;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.core.component.sql.SqlPersistenceComponent;
import com.speedment.runtime.core.component.sql.SqlStreamSupplierComponent;
import com.speedment.runtime.core.exception.SpeedmentException;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.annotation.Generated;
import static com.speedment.common.injector.State.RESOLVED;

/**
 * The generated Sql Adapter for a {@link
 * com.speedment.examples.generated.socialnetwork.db0.socialnetwork.image.Image}
 * entity.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@Generated("Speedment")
public abstract class GeneratedImageSqlAdapter {
    
    private final TableIdentifier<Image> tableIdentifier;
    
    protected GeneratedImageSqlAdapter() {
        this.tableIdentifier = TableIdentifier.of("db0", "socialnetwork", "image");
    }
    
    @ExecuteBefore(RESOLVED)
    void installMethodName(SqlStreamSupplierComponent streamSupplierComponent, SqlPersistenceComponent persistenceComponent) {
        streamSupplierComponent.install(tableIdentifier, this::apply);
        persistenceComponent.install(tableIdentifier);
    }
    
    protected Image apply(ResultSet resultSet) throws SpeedmentException {
        final Image entity = createEntity();
        try {
            entity.setId(          resultSet.getLong(1)      );
            entity.setUploader(    resultSet.getLong(2)      );
            entity.setTitle(       resultSet.getString(3)    );
            entity.setDescription( resultSet.getString(4)    );
            entity.setImgData(     resultSet.getString(5)    );
            entity.setUploaded(    resultSet.getTimestamp(6) );
        } catch (final SQLException sqle) {
            throw new SpeedmentException(sqle);
        }
        return entity;
    }
    
    protected ImageImpl createEntity() {
        return new ImageImpl();
    }
}